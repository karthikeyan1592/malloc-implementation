#####################################################################
# CS:APP Malloc Implementation from CMU 15213(computer systems a programmer's perspective)
# Name: Karthikeyan(self-study student)
######################################################################

***********
Main Files:
***********

mm.{c,h}	
	Your solution malloc package. mm.c is the file that you
	will be handing in, and is the only file you should modify.

mdriver.c	
	The malloc driver that tests your mm.c file

short{1,2}-bal.rep
	Two tiny tracefiles to help you get started. 

Makefile	
	Builds the driver

**********************************
Other support files for the driver
**********************************

config.h	Configures the malloc lab driver
fsecs.{c,h}	Wrapper function for the different timer packages
clock.{c,h}	Routines for accessing the Pentium and Alpha cycle counters
fcyc.{c,h}	Timer functions based on cycle counters
ftimer.{c,h}	Timer functions based on interval timers and gettimeofday()
memlib.{c,h}	Models the heap and sbrk function

*******************************
Building and running the driver
*******************************
To build the driver, type "make" to the shell.

To run the driver on a tiny test trace:

	unix> mdriver -V -f short1-bal.rep

The -V option prints out helpful tracing and summary information.

To get a list of the driver flags:

	unix> mdriver -h
###############################################################################
Performance Measurement:
###############################################################################

root@LAPTOP-97G9G880:~/karthi/malloc-implementation# ./mdriver -l -v -a -t traces/
Using default tracefiles in traces/
Measuring performance with gettimeofday().

Results for libc malloc:
trace  valid  util     ops      secs  Kops
 0       yes    0%    5694  0.000364 15634
 1       yes    0%    5848  0.000265 22076
 2       yes    0%    6648  0.000798  8332
 3       yes    0%    5380  0.000772  6966
 4       yes    0%   14400  0.000234 61617
 5       yes    0%    4800  0.000546  8798
 6       yes    0%    4800  0.000363 13234
 7       yes    0%    6000  0.000088 68027
 8       yes    0%    7200  0.000087 82949
 9       yes    0%   14401  0.000684 21069
10       yes    0%   14401  0.000129111377
Total           0%   89572  0.004329 20691

Results for mm malloc:
trace  valid  util     ops      secs  Kops
 0       yes   99%    5694  0.006559   868
 1       yes   99%    5848  0.007162   817
 2       yes   99%    6648  0.010320   644
 3       yes  100%    5380  0.007111   757
 4       yes   66%   14400  0.000095152059
 5       yes   93%    4800  0.005530   868
 6       yes   92%    4800  0.005614   855
 7       yes   55%    6000  0.023863   251
 8       yes   51%    7200  0.027390   263
 9       yes   27%   14401  0.048977   294
10       yes   34%   14401  0.001258 11452
Total          74%   89572  0.143879   623

Perf index = 44 (util) + 40 (thru) = 84/100
